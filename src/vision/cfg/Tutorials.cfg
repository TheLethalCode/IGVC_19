#!/usr/bin/env python
PACKAGE = "node"

from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()
gen.add("is_debug",    bool_t,    0, "d", False)
gen.add("is_run",    bool_t,    0, "d", True)
gen.add("is_threshold",    bool_t,    0, "d", False)

gen.add("yshift",    double_t,    0, "distance from first view point to lidar in metres", 0.33,  0, 5)
gen.add("angleshift", double_t, 0, "angle between camera and lidar axis in radians",    0.0524, 0,   0.5)
gen.add("pixelsPerMetre",    double_t,    0, "A double parameter",112.412,0,300)
gen.add("bins",   int_t,   0, "An integer parameter", 1080,0,2500)

gen.add("wTh",  int_t,   0, "set threshold for white color", 50,0,255)
gen.add("iteration",   int_t,   0, "An integer parameter", 1000,0,1500)

gen.add("maxDist",   int_t,   0, "An integer parameter", 300,0,1000)
gen.add("removeDist",   int_t,   0, "An integer parameter", 3000,0,5000)
gen.add("minLaneInlier",   int_t,   0, "An integer parameter", 1500,0,2500)
gen.add("minPointsForRANSAC",   int_t,   0, "An integer parameter", 500,0,1500)

gen.add("stepsize",    double_t,    0, "3.5 times ppm", 393.442,  0, 1000.0)

gen.add("botlength",  int_t,   0, "set threshold for white color", 90,0,150)
gen.add("botwidth",  int_t,   0, "set threshold for white color", 30,0,100)
gen.add("obstacleWidth",  int_t,   0, "s", 30,0,100)




size_enum = gen.enum([ gen.const("Small",      int_t, 0, "A small constant"),
                       gen.const("Medium",     int_t, 1, "A medium constant"),
                       gen.const("Large",      int_t, 2, "A large constant"),
                       gen.const("ExtraLarge", int_t, 3, "An extra large constant")],
                     "An enum to set size")

gen.add("size", int_t, 0, "A size parameter which is edited via an enum", 1, 0, 3, edit_method=size_enum)

exit(gen.generate(PACKAGE, "node", "Tutorials"))
